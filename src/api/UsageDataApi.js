/*
 * Hologram
 * The Hologram HTTP API is a REST-style interface for managing Hologram devices, accounts, and cloud data.  Using the Hologram REST API, you can activate SIMs, get your devices approximate location, send SMS to your devices, update a device's usage limit, and much more.  ## Authentication  Hologram supports **HTTP Basic authentication** using API keys. Simply set the username of the request to `apikey`. The password field is the API key itself.  You can find your API key on the Hologram Dashboard under [Account Settings](https://dashboard.hologram.io/account/api):  ![API key screenshot](https://hologram.io/wp-content/uploads/2016/12/apikey.png)  Your API key gives you access to your personal account, as well as any organizations you are a member of. Make sure you don't store your API key in a publicly accessible place like GitHub. If you are a member of multiple organizations, many endpoints accept an `orgid` argument to filter for devices or other objects within a specific organization.  You can find your orgid by following this guide from our Help Center.  ### Header Example  ``` curl --verbose GET \\ 'https://dashboard.hologram.io/api/1/users/me' \\ -u apikey:2rjpYZZNzFAoGxAgEP2SC6moL3emyB ```  You can also base64 encode \"apikey:[YOUR_API_KEY]\" where [YOUR_API_KEY] is your API key and include it directly in the header.  ``` curl --verbose GET \\ 'https://dashboard.hologram.io/api/1/users/me' \\ --header \"Authorization: Basic YXBpa2V5OjJyanBZWlpOekZBb0d4QWdFUDJTQzZtb0wzZW15Qg==\" ```  ## Requests  Request bodies can be provided in either JSON or form-urlencoded formats. Please note that the examples in this documentation will only display JSON bodies.  ### **JSON body**  ``` curl --verbose --request POST \\ --header \"Content-Type: application/json\" \\ --header \"Authorization: Basic YXBpa2V5OjJyanBZWlpOekZBb0d4QWdFUDJTQzZtb0wzZW15Qg==\" --data '{\"deviceid\": 56668, \"body\": \"Hello device!\"}' \\ 'https://dashboard.hologram.io/api/1/sms/incoming' ```  ### **form-urlencoded body**  ``` curl --verbose --request POST \\ --header \"Content-Type: application/x-form-urlencoded\" \\ --header \"Authorization: Basic YXBpa2V5OjJyanBZWlpOekZBb0d4QWdFUDJTQzZtb0wzZW15Qg==\" --data 'deviceid=56668&body=Hello%20device!' \\ 'https://dashboard.hologram.io/api/1/sms/incoming' ```  ## Responses  All API responses are returned as JSON objects with the following fields:  * `success` (boolean) - Indicates whether the request was successful.  * `data` (object or array) - Contains the requested data or information about the operation that was performed. Only present when `success` is true.  * `error` (string) - Information about why the request failed. Only present when `success` is false.  Most GET responses will also include the following fields if a limit is included as part of the query string:  * `limit` (number) - The query limit, some have this value built in and others often have a maximum value that the limit can be  * `size` (number) - The number of values returned by the query  * `continues` (boolean, optional) - This is only returned if there are more values than were returned  * `links` (array) - Contains information related to the query performed     * `path` (string) - The API endpoint path     * `base` (string) - API base URL     * `next` (string) - URL with query string to get the next results  ## Rate Limiting  In order to provide a good quality of service to all of our customers, we enforce a rate limit on all API requests.  If you exceed the rate limit you will receive a HTTP 429 response with a JSON response body like this:  ``` {   \"success\":false,   \"error\":\"API rate limit exceeded\" } ```  If you receive this response, you should refrain from making requests for 5-10 seconds and then retry the request.  Hologram's REST API provides methods to perform many requests in bulk. For example, you can change the plans of multiple SIMs at once using https://dashboard.hologram.io/api/1/links/cellular/changeplan.  If there is request you would like to make in bulk but cannot, please reach out to [success@hologram.io](mailto:success@hologram.io) for assistance.
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.13
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ListAllRecentDataSessionsresponse', 'model/ListUsageDatabyBillingPeriodresponse', 'model/ListUsageDatabyDayresponse', 'model/ListUsageDatabyMonthresponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ListAllRecentDataSessionsresponse'), require('../model/ListUsageDatabyBillingPeriodresponse'), require('../model/ListUsageDatabyDayresponse'), require('../model/ListUsageDatabyMonthresponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Hologram) {
      root.Hologram = {};
    }
    root.Hologram.UsageDataApi = factory(root.Hologram.ApiClient, root.Hologram.ListAllRecentDataSessionsresponse, root.Hologram.ListUsageDatabyBillingPeriodresponse, root.Hologram.ListUsageDatabyDayresponse, root.Hologram.ListUsageDatabyMonthresponse);
  }
}(this, function(ApiClient, ListAllRecentDataSessionsresponse, ListUsageDatabyBillingPeriodresponse, ListUsageDatabyDayresponse, ListUsageDatabyMonthresponse) {
  'use strict';

  /**
   * UsageData service.
   * @module api/UsageDataApi
   * @version 1.0
   */

  /**
   * Constructs a new UsageDataApi. 
   * @alias module:api/UsageDataApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the listAllRecentDataSessions operation.
     * @callback module:api/UsageDataApi~listAllRecentDataSessionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAllRecentDataSessionsresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List All Recent Data Sessions
     * `GET https://dashboard.hologram.io/api/1/usage/data`  Returns individual sessions and their data usage for the last three months. Use the linkid parameter to retrieve data sessions for a specific device.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.orgid Return data sessions for devices owned by the specified organization
     * @param {Array.<String>} opts.orgids Return data sessions for devices owned by the specified organizations
     * @param {Number} opts.startafter Return usage data for records whose ID come after the specified ID
     * @param {Number} opts.linkid Return data sessions for a device specified by link ID
     * @param {Array.<String>} opts.linkids Return data sessions for devices specified by link IDs
     * @param {Number} opts.tagid Return data sessions with specified tag ID
     * @param {Array.<String>} opts.tagids Return data sessions with specified tag IDs
     * @param {Number} opts.timestart Return data sessions received after this time (Unix timestamp)
     * @param {Number} opts.timeend Return data sessions received before this time (Unix timestamp)
     * @param {String} opts.tagname Return data sessions with specified tags
     * @param {Boolean} opts.islive Return data sessions for live devices. Does not include data sessions for devices that are currently paused or inactive.
     * @param {Number} opts.limit Return a maximum of this many usage sessions
     * @param {module:api/UsageDataApi~listAllRecentDataSessionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAllRecentDataSessionsresponse}
     */
    this.listAllRecentDataSessions = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'orgid': opts['orgid'],
        'startafter': opts['startafter'],
        'linkid': opts['linkid'],
        'tagid': opts['tagid'],
        'timestart': opts['timestart'],
        'timeend': opts['timeend'],
        'tagname': opts['tagname'],
        'islive': opts['islive'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
        'orgids': {
          value: opts['orgids'],
          collectionFormat: 'multi'
        },
        'linkids': {
          value: opts['linkids'],
          collectionFormat: 'multi'
        },
        'tagids': {
          value: opts['tagids'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListAllRecentDataSessionsresponse;

      return this.apiClient.callApi(
        '/api/1/usage/data', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listDeviceOriginatedSMSUsage operation.
     * @callback module:api/UsageDataApi~listDeviceOriginatedSMSUsageCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Device-Originated SMS Usage
     * `GET https://dashboard.hologram.io/api/1/usage/sms`  Returns individual device-originated SMS for the last three months. Use the linkid parameter to retrieve SMS for a specific device.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.orgid Return SMS for devices owned by the specified organization
     * @param {Array.<String>} opts.orgids Return SMS for devices owned by the specified organizations
     * @param {Number} opts.startafter Return SMS for devices whose linkid ID come after the specified ID
     * @param {Number} opts.linkid Return SMS for a device specified by link ID
     * @param {Array.<String>} opts.linkids Return SMS for devices specified by link IDs
     * @param {Number} opts.tagid Return SMS with specified tag ID
     * @param {Array.<String>} opts.tagids Return SMS with specified tag IDs
     * @param {Number} opts.timestart Return SMS after this time (Unix timestamp)
     * @param {Number} opts.timeend Return SMS before this time (Unix timestamp)
     * @param {String} opts.tagname Return SMS with specified tags
     * @param {Boolean} opts.islive Return SMS for live devices. Does not include SMS for devices that are currently paused or inactive.
     * @param {Number} opts.limit Return a maximum of this many SMS
     * @param {module:api/UsageDataApi~listDeviceOriginatedSMSUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    this.listDeviceOriginatedSMSUsage = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'orgid': opts['orgid'],
        'startafter': opts['startafter'],
        'linkid': opts['linkid'],
        'tagid': opts['tagid'],
        'timestart': opts['timestart'],
        'timeend': opts['timeend'],
        'tagname': opts['tagname'],
        'islive': opts['islive'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
        'orgids': {
          value: opts['orgids'],
          collectionFormat: 'multi'
        },
        'linkids': {
          value: opts['linkids'],
          collectionFormat: 'multi'
        },
        'tagids': {
          value: opts['tagids'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi(
        '/api/1/usage/sms?', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listUsageDatabyBillingPeriod operation.
     * @callback module:api/UsageDataApi~listUsageDatabyBillingPeriodCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListUsageDatabyBillingPeriodresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Usage Data by Billing Period
     * `GET https://dashboard.hologram.io/api/1/usage/data/billing`  Returns total data usage for each device summarized by billing period. Data is available for the last three months.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.orgid Return usage data for devices owned by organization specified by org ID
     * @param {Number} opts.linkid Return usage data for device specified by link ID
     * @param {Number} opts.tagid Return usage data for devices with tag specified by tag ID
     * @param {Number} opts.limit Return a maximum of this many records
     * @param {module:api/UsageDataApi~listUsageDatabyBillingPeriodCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListUsageDatabyBillingPeriodresponse}
     */
    this.listUsageDatabyBillingPeriod = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'orgid': opts['orgid'],
        'linkid': opts['linkid'],
        'tagid': opts['tagid'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListUsageDatabyBillingPeriodresponse;

      return this.apiClient.callApi(
        '/api/1/usage/data/billing', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listUsageDatabyDay operation.
     * @callback module:api/UsageDataApi~listUsageDatabyDayCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListUsageDatabyDayresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Usage Data by Day
     * `GET https://dashboard.hologram.io/api/1/usage/data/daily`  Returns total data usage for each device summarized by day in UTC
     * @param {Object} opts Optional parameters
     * @param {Number} opts.orgid Return usage data for devices owned by organization specified by org ID
     * @param {Number} opts.linkid Return usage data for a device specified by link ID
     * @param {Array.<String>} opts.linkids Return usage data for devices specified by link IDs
     * @param {Number} opts.tagid Return usage data for devices with tag specified by tag ID
     * @param {Array.<String>} opts.tagids Return usage data for devices with tags specified by tag IDs
     * @param {String} opts.tagname Return usage data for devices with tags specified by tag name
     * @param {Number} opts.timestart Return usage data received after this time (Unix timestamp)
     * @param {Number} opts.timeend Return usage data received before this time (Unix timestamp)
     * @param {Boolean} opts.islive Return data sessions for devices in Live status. Does not include data sessions for devices that are currently paused or inactive.
     * @param {Number} opts.startafter Return usage data for records whose ID come after the specified ID
     * @param {Number} opts.limit Return a maximum of this many usage records
     * @param {module:api/UsageDataApi~listUsageDatabyDayCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListUsageDatabyDayresponse}
     */
    this.listUsageDatabyDay = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'orgid': opts['orgid'],
        'linkid': opts['linkid'],
        'tagid': opts['tagid'],
        'tagname': opts['tagname'],
        'timestart': opts['timestart'],
        'timeend': opts['timeend'],
        'islive': opts['islive'],
        'startafter': opts['startafter'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
        'linkids': {
          value: opts['linkids'],
          collectionFormat: 'multi'
        },
        'tagids': {
          value: opts['tagids'],
          collectionFormat: 'multi'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListUsageDatabyDayresponse;

      return this.apiClient.callApi(
        '/api/1/usage/data/daily', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the listUsageDatabyMonth operation.
     * @callback module:api/UsageDataApi~listUsageDatabyMonthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListUsageDatabyMonthresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Usage Data by Month
     * `GET https://dashboard.hologram.io/api/1/usage/data/monthly`  Returns total data usage for each device summarized by month
     * @param {Object} opts Optional parameters
     * @param {Number} opts.orgid Return usage data for devices owned by organization specified by org ID
     * @param {Number} opts.linkid Return usage data for device specified by link ID
     * @param {Number} opts.tagid Return usage data for devices with tag specified by tag ID
     * @param {String} opts.mintime Return usage data after specified date
     * @param {String} opts.maxtime Return usage data before specified date
     * @param {Number} opts.limit Return a maximum of this many records
     * @param {module:api/UsageDataApi~listUsageDatabyMonthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListUsageDatabyMonthresponse}
     */
    this.listUsageDatabyMonth = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'orgid': opts['orgid'],
        'linkid': opts['linkid'],
        'tagid': opts['tagid'],
        'mintime': opts['mintime'],
        'maxtime': opts['maxtime'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['auth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ListUsageDatabyMonthresponse;

      return this.apiClient.callApi(
        '/api/1/usage/data/monthly', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
